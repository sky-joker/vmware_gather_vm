---
- name: Gather virtual machines
  community.vmware.vmware_vm_info:
    hostname: "{{ vcenter_hostname | default(lookup('env', 'VMWARE_HOST')) }}"
    username: "{{ vcenter_username | default(lookup('env', 'VMWARE_USER')) }}"
    password: "{{ vcenter_password | default(lookup('env', 'VMWARE_PASSWORD')) }}"
    validate_certs: "{{ validate_certs | default(false) }}"
    folder: "{{ '/' + datacenter_name + '/vm/' + vm_folder | default('/%s/vm' % datacenter_name) }}"
  register: gather_vm_result

- name: Set delete_vms variable
  ansible.builtin.set_fact:
    delete_vms: >-
      {{ gather_vm_result.virtual_machines
        | community.general.json_query('[*].guest_name')
        | map('regex_search', '%s.*%s' % (tenant_name, delete_ipaddr))
        | select()
      }}
  vars:
    delete_ipaddr: "{{ delete_ipaddr_regex.split('.') | join('') }}"

- name: If the folder doesn't exist
  ansible.builtin.fail:
    msg: "vm not found"
  when:
    - delete_vms | length == 0

- name: Set target_vm_info variable
  ansible.builtin.set_fact:
    target_vm_info: >-
      {{ target_vm_info | default([])
        + [{"vm_name": item}]
      }}
  loop: "{{ delete_vms }}"
